name: Build and Verify

on:
  workflow_call:
    inputs:
      python-version:
        description: 'Python version to use'
        required: false
        default: '3.10'
        type: string
    outputs:
      package-version:
        description: 'The verified package version'
        value: ${{ jobs.build-and-verify.outputs.package-version }}
      tag-version:
        description: 'The verified tag version'
        value: ${{ jobs.build-and-verify.outputs.tag-version }}

jobs:
  build-and-verify:
    name: Build distribution and verify version
    runs-on: ubuntu-latest
    outputs:
      package-version: ${{ steps.verify.outputs.package-version }}
      tag-version: ${{ steps.verify.outputs.tag-version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for git describe
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
          
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
          
      - name: Set version from git tag
        run: |
          python scripts/sync_versions.py
          
      - name: Verify version consistency
        id: verify
        run: |
          # Get the release tag version
          RELEASE_TAG=${GITHUB_REF#refs/tags/}
          echo "Release tag: $RELEASE_TAG"
          
          # Get the package version
          PACKAGE_VERSION=$(python -c "from simple_global_logging import __version__; print(__version__)")
          echo "Package version: $PACKAGE_VERSION"
          
          # Compare versions (remove 'v' prefix from tag if present)
          TAG_VERSION=${RELEASE_TAG#v}
          if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "Version mismatch: tag=$TAG_VERSION, package=$PACKAGE_VERSION"
            exit 1
          fi
          echo "Version consistency verified: $PACKAGE_VERSION"
          
          # Set outputs for other jobs
          echo "package-version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
          echo "tag-version=$TAG_VERSION" >> $GITHUB_OUTPUT
          
      - name: Build package
        run: python -m build
        
      - name: Store distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/ 